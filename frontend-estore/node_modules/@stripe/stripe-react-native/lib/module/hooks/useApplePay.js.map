{"version":3,"names":["SET_SHIPPING_METHOD_CALLBACK_NAME","SET_SHIPPING_CONTACT_CALLBACK_NAME","useApplePay","onShippingMethodSelected","onShippingContactSelected","useStripe","isApplePaySupported","_presentApplePay","presentApplePay","_confirmApplePayPayment","confirmApplePayPayment","updateApplePaySummaryItems","_openApplePaySetup","openApplePaySetup","useState","items","setItems","loading","setLoading","onDidSetShippingMethod","useCallback","result","shippingMethod","onDidSetShippingContact","shippingContact","useEffect","eventEmitter","NativeEventEmitter","NativeModules","StripeSdk","didSetShippingMethodListener","addListener","didSetShippingContactListener","remove","params","cartItems","error","clientSecret"],"sources":["useApplePay.tsx"],"sourcesContent":["import type { ApplePay, ApplePayError, StripeError } from '../types';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useStripe } from './useStripe';\nimport { NativeEventEmitter, NativeModules } from 'react-native';\n\nexport interface Props {\n  /**\n   *\n   * @example\n   * ```ts\n   * const { presentApplePay } = useApplePay({\n   *  onShippingMethodSelected: (shippingMethod, handler) => {\n   *    handler([\n   *      { label: 'Example item name 1', amount: '11.00' },\n   *      { label: 'Example item name 2', amount: '25.00' },\n   *   ]);\n   *  }\n   * })\n   * ```\n   */\n  onShippingMethodSelected?: (\n    shippingMethod: ApplePay.ShippingMethod,\n    handler: (summaryItems: ApplePay.CartSummaryItem[]) => Promise<{\n      error?: StripeError<ApplePayError>;\n    }>\n  ) => void;\n  /**\n   *\n   * @example\n   * ```ts\n   * const { presentApplePay } = useApplePay({\n   *  onShippingContactSelected: (shippingContact, handler) => {\n   *    handler([\n   *      { label: 'Example item name 1', amount: '11.00' },\n   *      { label: 'Example item name 2', amount: '25.00' },\n   *    ], [\n   *      { field: 'city', message: 'city error' },\n   *    ]);\n   *  }\n   * })\n   * ```\n   */\n  onShippingContactSelected?: (\n    shippingContact: ApplePay.ShippingContact,\n    handler: (\n      summaryItems: ApplePay.CartSummaryItem[],\n      errorAddressFields?: Array<{\n        field: ApplePay.AddressFields;\n        message?: string;\n      }>\n    ) => Promise<{\n      error?: StripeError<ApplePayError>;\n    }>\n  ) => void;\n}\n\nconst SET_SHIPPING_METHOD_CALLBACK_NAME = 'onDidSetShippingMethod';\nconst SET_SHIPPING_CONTACT_CALLBACK_NAME = 'onDidSetShippingContact';\n\n/**\n * useApplePay hook\n */\nexport function useApplePay({\n  onShippingMethodSelected,\n  onShippingContactSelected,\n}: Props = {}) {\n  const {\n    isApplePaySupported,\n    presentApplePay: _presentApplePay,\n    confirmApplePayPayment: _confirmApplePayPayment,\n    updateApplePaySummaryItems,\n    openApplePaySetup: _openApplePaySetup,\n  } = useStripe();\n  const [items, setItems] = useState<ApplePay.CartSummaryItem[] | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  const onDidSetShippingMethod = useCallback(\n    (result: { shippingMethod: ApplePay.ShippingMethod }) => {\n      if (onShippingMethodSelected) {\n        onShippingMethodSelected(\n          result.shippingMethod,\n          updateApplePaySummaryItems\n        );\n      } else {\n        updateApplePaySummaryItems(items as ApplePay.CartSummaryItem[]);\n      }\n    },\n    [items, onShippingMethodSelected, updateApplePaySummaryItems]\n  );\n\n  const onDidSetShippingContact = useCallback(\n    (result: { shippingContact: ApplePay.ShippingContact }) => {\n      if (onShippingContactSelected) {\n        onShippingContactSelected(\n          result.shippingContact,\n          updateApplePaySummaryItems\n        );\n      } else {\n        updateApplePaySummaryItems(items as ApplePay.CartSummaryItem[]);\n      }\n    },\n    [items, onShippingContactSelected, updateApplePaySummaryItems]\n  );\n\n  useEffect(() => {\n    const eventEmitter = new NativeEventEmitter(NativeModules.StripeSdk);\n    const didSetShippingMethodListener = eventEmitter.addListener(\n      SET_SHIPPING_METHOD_CALLBACK_NAME,\n      onDidSetShippingMethod\n    );\n    const didSetShippingContactListener = eventEmitter.addListener(\n      SET_SHIPPING_CONTACT_CALLBACK_NAME,\n      onDidSetShippingContact\n    );\n\n    return () => {\n      didSetShippingMethodListener.remove();\n      didSetShippingContactListener.remove();\n    };\n  }, [onDidSetShippingContact, onDidSetShippingMethod]);\n\n  const presentApplePay = useCallback(\n    async (params: ApplePay.PresentParams) => {\n      setLoading(true);\n      setItems(params.cartItems);\n      const result = await _presentApplePay(params);\n      if (result.error) {\n        setItems(null);\n      }\n      setLoading(false);\n      return result;\n    },\n    [_presentApplePay]\n  );\n\n  const openApplePaySetup = useCallback(async () => {\n    setLoading(true);\n    const result = await _openApplePaySetup();\n    setLoading(false);\n    return result;\n  }, [_openApplePaySetup]);\n\n  const confirmApplePayPayment = useCallback(\n    async (clientSecret: string) => {\n      setLoading(true);\n      const result = await _confirmApplePayPayment(clientSecret);\n      setItems(null);\n      setLoading(false);\n      return result;\n    },\n    [_confirmApplePayPayment]\n  );\n\n  return {\n    loading,\n    presentApplePay,\n    confirmApplePayPayment,\n    isApplePaySupported,\n    openApplePaySetup,\n  };\n}\n"],"mappings":"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"}