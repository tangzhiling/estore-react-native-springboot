<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.estore.project.mapper.ProClassifyMapper">
    
    <resultMap type="ProClassify" id="ProClassifyResult">
        <result property="classifyId"    column="classify_id"    />
        <result property="name"    column="name"    />
        <result property="sort"    column="sort"    />
    </resultMap>

    <sql id="selectProClassifyVo">
        select classify_id, name, sort from pro_classify
    </sql>

    <select id="selectProClassifyList" parameterType="ProClassify" resultMap="ProClassifyResult">
        <include refid="selectProClassifyVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="sort != null "> and sort = #{sort}</if>
        </where>
    </select>
    
    <select id="selectProClassifyByClassifyId" parameterType="Long" resultMap="ProClassifyResult">
        <include refid="selectProClassifyVo"/>
        where classify_id = #{classifyId}
    </select>
        
    <insert id="insertProClassify" parameterType="ProClassify" useGeneratedKeys="true" keyProperty="classifyId">
        insert into pro_classify
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="sort != null">sort,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="sort != null">#{sort},</if>
         </trim>
    </insert>

    <update id="updateProClassify" parameterType="ProClassify">
        update pro_classify
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="sort != null">sort = #{sort},</if>
        </trim>
        where classify_id = #{classifyId}
    </update>

    <delete id="deleteProClassifyByClassifyId" parameterType="Long">
        delete from pro_classify where classify_id = #{classifyId}
    </delete>

    <delete id="deleteProClassifyByClassifyIds" parameterType="String">
        delete from pro_classify where classify_id in 
        <foreach item="classifyId" collection="array" open="(" separator="," close=")">
            #{classifyId}
        </foreach>
    </delete>
</mapper>